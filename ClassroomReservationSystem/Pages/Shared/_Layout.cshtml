<!DOCTYPE html>
<html lang="en">

<!--GPT, please add dark mode to the pages in this layout file, i will share the screenshots of the interfaces. -->
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Classroom Reservation</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css" />
    
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            transition: background-color 0.3s, color 0.3s;
        }

        body.dark-mode {
            background-color: #121212;
            color: #f1f1f1;
        }

        .navbar {
            font-weight: 500;
        }

        .navbar-nav .nav-link {
            font-size: 1rem;
            margin-right: 0.75rem;
        }

        .navbar-nav .dropdown-menu {
            font-size: 0.95rem;
        }

        .navbar-brand {
            font-size: 1.25rem;
        }

        /* DARK MODE NAVBAR */
        body.dark-mode .navbar,
        body.dark-mode .dropdown-menu {
            background-color: #1f1f1f !important;
        }

        body.dark-mode .nav-link,
        body.dark-mode .dropdown-item,
        body.dark-mode .navbar-brand {
            color: #ffffff !important;
        }

        body.dark-mode .dropdown-item:hover {
            background-color: #333 !important;
        }

        /* DARK MODE TOGGLE */
        .form-switch .form-check-input {
            cursor: pointer;
        }

        /* DARK MODE - Cards with visible contrast */
        body.dark-mode .card,
        body.dark-mode .card-body {
            background-color: #1f1f1f !important;
            color: #f1f1f1 !important;
            border: 1px solid #2a2a2a !important;
            box-shadow: 0 2px 6px rgba(255, 255, 255, 0.04);
        }

        /* DARK MODE - Buttons (as-is, unchanged) */
        body.dark-mode .btn {
            filter: brightness(0.85);
            border: none;
        }

        body.dark-mode .btn:hover {
            filter: brightness(1);
        }

        /* DARK MODE - FullCalendar */
        body.dark-mode .fc {
            background-color: #1e1e1e !important;
            color: #f1f1f1 !important;
        }

        body.dark-mode .fc-toolbar-title,
        body.dark-mode .fc-col-header-cell-cushion,
        body.dark-mode .fc-daygrid-day-number {
            color: #ffffff !important;
        }

        body.dark-mode .fc-button,
        body.dark-mode .fc-button-primary {
            background-color: #2c2c2c !important;
            color: #f1f1f1 !important;
            border-color: #444 !important;
        }

        body.dark-mode .fc-button:hover {
            background-color: #3c3c3c !important;
        }

        body.dark-mode table,
        body.dark-mode td,
        body.dark-mode th {
            background-color: #1e1e1e !important;
            color: #f1f1f1 !important;
        }

        .fc-event.event-approved {
            background-color: #28a745 !important; /* yeşil */
            color: white !important;
        }

        .fc-event.event-pending {
            background-color: #007bff !important; /* mavi */
            color: white !important;
        }

        .fc-event.event-rejected {
            background-color: #dc3545 !important; /* kırmızı */
            color: white !important;
        }


        body.dark-mode h1,
        body.dark-mode h2,
        body.dark-mode h3,
        body.dark-mode h4,
        body.dark-mode h5,
        body.dark-mode h6 {
            color: #ffffff !important;
        }

        body.dark-mode p,
        body.dark-mode span,
        body.dark-mode small,
        body.dark-mode strong,
        body.dark-mode .text-muted {
            color: #e0e0e0 !important;
        }

        body.dark-mode label,
        body.dark-mode .form-label,
        body.dark-mode .form-check-label {
            color: #ffffff !important;
        }

        body.dark-mode table,
        body.dark-mode th,
        body.dark-mode td {
            background-color: #1e1e1e !important;
            color: #ffffff !important;
            border-color: #555 !important;
        }

        body.dark-mode input[type="text"],
        body.dark-mode input[type="email"],
        body.dark-mode input[type="password"],
        body.dark-mode input[type="date"],
        body.dark-mode textarea,
        body.dark-mode select {
            background-color: #2c2c2c !important;
            color: #ffffff !important;
            border: 1px solid #444 !important;
        }

        body.dark-mode input::placeholder,
        body.dark-mode textarea::placeholder {
            color: #cccccc !important;
        }
    </style>
    @RenderSection("Styles", required: false)
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-white border-bottom px-4 shadow-sm">
        <a class="navbar-brand text-dark fw-bold" href="/Auth/Home">Classroom Reservation</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNavbar">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="mainNavbar">
            <ul class="navbar-nav me-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-dark" href="#" data-bs-toggle="dropdown">Instructor</a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Instructor/NewReservation">Submit New Reservation</a></li>
                        <li><a class="dropdown-item" href="/Instructor/InstructorSchedule">View My Weekly Schedule</a></li>
                        <li><a class="dropdown-item" href="/Instructor/FeedbackSummary">View Feedback</a></li>
                    </ul>
                </li>
                <li class="nav-item"><a class="nav-link text-dark" href="/Public/Feedback">Feedback</a></li>
                <li class="nav-item"><a class="nav-link text-dark" href="/Public/Contact">Contact Us</a></li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-dark" href="#" data-bs-toggle="dropdown">Admin</a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Admin/Terms">Manage Terms</a></li>
                        <li><a class="dropdown-item" href="/Admin/Reservations">All Reservations</a></li>
                        <li><a class="dropdown-item" href="/Admin/InstructorRatings">View Instructor Ratings</a></li>
                        <li><a class="dropdown-item" href="/Admin/Register">Register Instructor</a></li>
                        <li><a class="dropdown-item" href="/Admin/ViewContactMessages">Contact Messages</a></li>
                    </ul>
                </li>
            </ul>
            <ul class="navbar-nav align-items-center">
                <li class="nav-item"><a class="nav-link text-dark" href="/Auth/Login">Login</a></li>
                <li class="nav-item"><a class="nav-link text-dark" href="/Auth/Logout">Logout</a></li>
                <li class="nav-item ms-3">
                    <div class="form-check form-switch d-flex align-items-center">
                        <input class="form-check-input" type="checkbox" id="modeToggle" />
                        <label class="form-check-label ms-2" for="modeToggle" id="modeIcon">🌞</label>
                    </div>
                </li>
            </ul>
        </div>
    </nav>

    <main class="container mt-4">
        @RenderBody()
    </main>

    @RenderSection("Scripts", required: false)

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        const toggle = document.getElementById('modeToggle');
        const icon = document.getElementById('modeIcon');
        const prefersDark = localStorage.getItem('theme') === 'dark';

        function updateIcon(isDark) {
            icon.textContent = isDark ? '🌙' : '🌞';
        }

        if (prefersDark) {
            document.body.classList.add('dark-mode');
            toggle.checked = true;
            updateIcon(true);
        } else {
            updateIcon(false);
        }

        toggle.addEventListener('change', () => {
            const isDark = document.body.classList.toggle('dark-mode');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            updateIcon(isDark);
        });
    </script>
</body>
</html>

@page
@model ClassroomReservationSystem.Pages.Admin.ViewAllReservationsModel

@{
    ViewData["Title"] = "All Scheduled Reservations";
    Layout = "_Layout";
}
<!--GPT, I sent u the cshtml.cs code, please create a cshtml for it with bootstrap and create a calendar on my page which shows me the
Spring Season (17.02.2025 - 15.06.2025 btw 9 and 19 hours) and calendar hours must be like 09.00-10.00 , 10.00-11.00...-->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<div class="d-flex justify-content-center align-items-start" style="min-height: 100vh; padding-top: 60px;">
    <div class="card shadow-lg p-4" style="max-width: 1000px; width: 95%; background-color: rgba(255,255,255,0.95);">
        <h3 class="mb-4 d-flex align-items-center gap-2 text-dark">
            <i class="bi bi-calendar3"></i> Term Schedule
        </h3>

        <div class="calendar-wrapper shadow-sm rounded p-3 mb-4">
            <div id="calendar"></div>
        </div>

        <div class="text-center mt-4">
            <button class="btn btn-primary btn-lg px-4" onclick="location.href='@Url.Page("/Admin/Reservations")'">
                <i class="bi bi-gear-fill me-2"></i> Manage Reservations
            </button>
        </div>
    </div>
</div>

@section Styles {
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            background-image: url('/images/purple.jpg');
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
            background-attachment: fixed;
            font-family: 'Segoe UI', sans-serif;
        }

        .calendar-wrapper {
            background-color: rgba(128, 128, 128, 0.6);
            border-radius: 10px;
            padding: 15px;
        }

        #calendar {
            width: 100%;
            background-color: white;
            border-radius: 8px;
        }
    </style>
}

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            fetch('/Admin/ViewAllReservations?handler=Events')
                .then(res => res.json())
                .then(events => {
                    const calendarEl = document.getElementById('calendar');
                    const calendar = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'timeGridWeek',
                        headerToolbar: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'dayGridMonth,timeGridWeek,timeGridDay'
                        },
                        height: 'auto',
                        slotMinTime: '09:00:00',
                        slotMaxTime: '19:00:00',
                        validRange: {
                            start: '2025-02-17',
                            end: '2025-06-16'
                        },
                        allDaySlot: false,
                        events: events,
                        eventContent: function(arg) {
                            const reservation = arg.event.extendedProps;
                            const title = arg.event.title || "";
                            const classroom = reservation.classroom || "";
                            const instructor = reservation.instructor || "";

                            return {
                                html: `<div style="font-size: 0.75rem; line-height: 1.2;">
                                            <strong>${title}</strong><br />
                                            ${classroom} - ${instructor}
                                        </div>`
                            };
                        },
                        eventColor: '#007bff',
                        eventTextColor: '#fff',
                        eventDisplay: 'block',
                        slotLabelContent: function(arg) {
                            const hour = arg.date.getHours();
                            const nextHour = hour + 1;
                            const format = n => n.toString().padStart(2, '0');
                            return format(hour) + '.00-' + format(nextHour) + '.00';
                        },
                        eventTimeFormat: {
                            hour: '2-digit',
                            minute: '2-digit',
                            meridiem: 'short'
                        }
                    });
                    calendar.render();
                });
        });
    </script>
}

@page
@model ClassroomReservationSystem.Pages.Public.FeedbackModel
@{
    ViewData["Title"] = "Provide Feedback";
    Layout = "_Layout";
}

<div class="d-flex justify-content-center align-items-start" style="min-height: 100vh; padding-top: 60px;">
    <div class="card shadow-lg p-4" style="max-width: 600px; width: 90%; background-color: rgba(255, 255, 255, 0.92); color: black;">
        <h2 class="mb-4 text-center">Provide Feedback</h2>

        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
        {
            <div class="alert alert-success">@Model.SuccessMessage</div>
        }

        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-danger">@Model.ErrorMessage</div>
        }

        <form method="post" novalidate>
            <div class="form-group mb-3">
                <label asp-for="Input.CourseName" class="form-label"></label>
                <select asp-for="Input.CourseName" asp-items="Model.CourseOptions" class="form-control">
                    <option value="">Select a course</option>
                </select>
                <span asp-validation-for="Input.CourseName" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label class="form-label">Rating</label>
                <div id="star-rating" class="mb-2">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <i class="bi bi-star star-icon" data-value="@i"></i>
                    }
                </div>
                <input type="hidden" asp-for="Input.Rating" />
                <span asp-validation-for="Input.Rating" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Input.Comment" class="form-label"></label>
                <textarea asp-for="Input.Comment" class="form-control" rows="3" placeholder="Optional comment"></textarea>
                <span asp-validation-for="Input.Comment" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary w-100">Submit Feedback</button>
        </form>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', sans-serif;
            background-image: url('/images/blue.jpg');
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
            background-attachment: fixed;
        }

        .card {
            border-radius: 12px;
        }

        h2 {
            font-size: 1.8rem;
            font-weight: 700;
            color: #222;
        }

        label.form-label {
            font-weight: 600;
            color: #333;
            font-size: 0.95rem;
        }

        input.form-control,
        select.form-control,
        textarea.form-control {
            border-radius: 8px;
            font-size: 0.95rem;
        }

        input.form-control::placeholder,
        textarea.form-control::placeholder {
            color: #aaa;
            font-style: italic;
        }

        .btn-primary {
            font-weight: 600;
            font-size: 1rem;
            padding: 0.6rem;
            border-radius: 8px;
        }

        .star-icon {
            font-size: 2rem;
            cursor: pointer;
            color: #5e5e5e;
            transition: color 0.2s;
        }

        .star-icon.filled {
            color: gold;
        }
    </style>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        const stars = document.querySelectorAll('.star-icon');
        const ratingInput = document.querySelector('input[name="Input.Rating"]');

        function updateStars(value) {
            stars.forEach((star, index) => {
                star.classList.remove('bi-star-fill', 'filled');
                star.classList.add('bi-star');
                if (index < value) {
                    star.classList.remove('bi-star');
                    star.classList.add('bi-star-fill', 'filled');
                }
            });
        }

        stars.forEach(star => {
            star.addEventListener('click', () => {
                const value = parseInt(star.getAttribute('data-value'));
                ratingInput.value = value;
                updateStars(value);
            });
        });

        // Sayfa yüklendiğinde mevcut değeri göster
        document.addEventListener("DOMContentLoaded", () => {
            const currentValue = parseInt(ratingInput.value || 0);
            updateStars(currentValue);
        });
    </script>
}
